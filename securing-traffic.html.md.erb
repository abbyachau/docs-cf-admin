---
title: Securing Traffic into Cloud Foundry
owner: Routing
---

<strong><%= modified_date %></strong>

This topic describes the options for securing traffic into your <%=vars.product_full%> <%=vars.product_abbr%> deployment with SSL/TLS certificates. You can configure the location where your deployment terminates TLS depending on your needs and certificate restrictions. 

<%=vars.ssl_config%>

## <a id="certtypes"></a> Certificate Requirements

The following requirements apply to the certificates you use to secure traffic into <%=vars.product_short%>

* You must obtain at least one SSL/TLS certificate. 
  * In a production environment, use a signed SSL/TLS certificate (trusted) from a known certificate authority (CA).
  * In a development or testing environment, you can use a trusted CA certificate or a self-signed certificate generated with `openssl` or a similar tool.
* The Gorouter currently only supports configuring a single HTTPS certificate. To associate multiple domains to a single certificate, including wildcard domains, use [Subject Alternative Name (SAN)](https://tools.ietf.org/html/rfc5280#section-4.2.1.6), an X.509 extension.
* If wildcard certificates are not supported for some or all of your domains, then configure termination requests at the [load balancer only](#lb_term).


* The Gorouter currently only supports configuring a single HTTPS certificate.
- The certificate on the Gorouter must be associated with the correct hostname so that HTTPS can validate the request.

* EV certs support multiple hostnames, like SAN, but do not support wildcards. For this reason, if EV certs are required, then terminate TLS/SSL at the [load balancer only](#lb_term) in order to avoid having to reissue and reinstall certificates on the Gorouter for every app or UAA security zone.

##<a id="ssl_options"></a> SSL/TLS Termination Options

There are three options for terminating SSL/TLS. You can terminate TLS at the Gorouter, your load balancer or at both.

The following table summarizes SSL/TLS termination options and which option to choose for your deployment.

<table border="1" class="nice">
<tr>
  <th>If the following applies to you:</th>
  <th>Then configure SSL/TLS termination at:</th>
  <th>Related Configuration Procedure</th>
  </tr>
  <tr>
  <td><ul><li>You want the most performant and recommended option, and </li>
  <li>You can use a single SAN certificate for your deployment, and </li>
  <li>You can associate that certificate with the hostname associated with the HTTP requests.</li>
  </ul></td>
  <td>
  Gorouter only
  </td>
  <td> <%=vars.ssl_gorouter_link%>
  </td>
  <tr>
  <td><ul><li>You have multiple domains and require multiple certificates, or</li>
  <li>You want a higher level of security, and</li>
  <li>You do not mind a slightly less performant deployment.</li>
  </td>
  <td>
   Load Balancer and Gorouter
  </td>
  <td> <%=vars.ssl_lb_gorouter_link%>
  </td>
  </tr>
</tr>
  <tr>
  <td>
  <ul><li>You cannot use wilcard certificates for some or all of your domains, or</li>
  <li>You are using Extended Validation (EV) certificates.</li>
  </ul>
  </td>
  <td>Load Balancer only
  </td>
  <td> <%=vars.ssl_lb_link%>
  </td>
  </tr>
  
  </table>
     
## <a id="protocol_support"></a> Protocol Support

The Gorouter only supports HTTP requests. Whatever configuration you choose for securing traffic into <%=vars.product_short%>, it must result in the Gorouter receiving HTTP requests.

For more information on features of HTTP routing handled by the Gorouter, see the [HTTP Routing](../concepts/http-routing.html) topic.



