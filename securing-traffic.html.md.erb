---
title: Securing Traffic into Cloud Foundry
owner: Routing
---

<strong><%= modified_date %></strong>

This topic describes the options for securing HTTP traffic into your <%=vars.product_full%> <%=vars.product_abbr%> deployment with SSL/TLS certificates. You can configure the location where your deployment terminates TLS depending on your needs and certificate restrictions. 

<%=vars.ssl_config%>

## <a id="protocol_support"></a> Protocol Support

Gorouter supports HTTP/HTTPS requests only. For more information on features supported by the Gorouter, see the [HTTP Routing](../concepts/http-routing.html) topic.

To secure non-HTTP traffic, terminate TLS at your load balancer or at the application. See [TCP Routing](enabling-tcp-routing.html) for details.

##<a id="ssl_options"></a> SSL/TLS Termination Options

There are three options for terminating SSL/TLS for HTTP traffic. You can terminate TLS at the Gorouter, your load balancer, or at both. 

The following table summarizes SSL/TLS termination options and which option to choose for your deployment.

<table border="1" class="nice">
<tr>
  <th>If the following applies to you:</th>
  <th>Then configure SSL/TLS termination at:</th>
  <th>Related Configuration Procedure</th>
  </tr>
  <tr>
  <td><ul><li>You want the most performant and recommended option, and </li>
  <li>You can use a single SAN certificate for all system and application domains for your deployment.</li>
  </ul></td>
  <td>
  Gorouter only
  </td>
  <td> <%=vars.ssl_gorouter_link%>
  </td>
  <tr>
  <td><ul><li>You cannot use a single SAN certificate for all system and application domains for your deployment, or</li>
  <li>You require Extended Validation (EV) certificates.</li>
  </ul>
  </td>
  <td>Load Balancer only
  </td>
  <td> <%=vars.ssl_lb_link%>
  </td>
  </tr>
  <tr>
  <td><ul><li>You want a higher level of security, and</li>
  <li>You do not mind a slightly less performant deployment, and</li>
  <li>You can use a single SAN certificate on the Gorouter, either for all system and application domains (but with a different key than for the same certs hosted on your load balancer) or for a single domain (but with hostname verification disabled on the load balancer).</li>
  </td>
  <td>
   Load Balancer and Gorouter
  </td>
  <td> <%=vars.ssl_lb_gorouter_link%>
  </td>
  </tr>
</tr>

  
  </table>
     

## <a id="certtypes"></a> Certificate Requirements

The following requirements apply to the certificates you use to secure traffic into <%=vars.product_short%>

* In a production environment, use a signed SSL/TLS certificate (trusted) from a known certificate authority (CA).
* In a development or testing environment, you can use a trusted CA certificate or a self-signed certificate generated with `openssl` or a similar tool.
* The Gorouter currently only supports configuring a single HTTPS certificate. The certificate on the Gorouter must be associated with all the domains it may receive requests for so that HTTPS can validate the request. To associate multiple domains to a single certificate, including wildcard domains, use [Subject Alternative Name (SAN)](https://tools.ietf.org/html/rfc5280#section-4.2.1.6), an X.509 extension.
* If wildcard certificates are not supported for some or all of your domains, then terminate TLS at your load balancer.
* If you cannot use a SAN certificate, terminate TLS at your load balancer.
* Extended Validation (EV) certs support multiple hostnames, like SAN, but do not support wildcards. For this reason, if EV certs are required, then terminate TLS at the load balancer only
* If you must terminate TLS at your load balancer, you may optionally secure requests from the load balancer to the Gorouter by terminating TLS at the Gorouter also. To accomplish this without using a SAN cert on the Gorouter, you will have to disable hostname validation on the load balancer, as the domain in the certificate hosted by the Gorouter will not match requests forwarded to it for applications on <%=vars.product_full%> by the load balancer.

